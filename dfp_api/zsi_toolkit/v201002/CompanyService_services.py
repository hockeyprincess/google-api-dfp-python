##################################################
# CompanyService_services.py
# generated by ZSI.generate.wsdl2python
##################################################


from CompanyService_services_types import *
import urlparse, types
from ZSI.TCcompound import ComplexType, Struct
from ZSI import client
import ZSI

# Locator
class CompanyServiceLocator:
    CompanyServiceInterface_address = "https://sandbox.google.com/apis/ads/publisher/v201002/CompanyService"
    def getCompanyServiceInterfaceAddress(self):
        return CompanyServiceLocator.CompanyServiceInterface_address
    def getCompanyServiceInterface(self, url=None, **kw):
        return CompanyServiceSoapBindingSOAP(url or CompanyServiceLocator.CompanyServiceInterface_address, **kw)

# Methods
class CompanyServiceSoapBindingSOAP:
    def __init__(self, url, **kw):
        kw.setdefault("readerclass", None)
        kw.setdefault("writerclass", None)
        # no resource properties
        self.binding = client.Binding(url=url, **kw)
        # no ws-addressing

    # op: createCompanies
    def createCompanies(self, request):
        if isinstance(request, createCompaniesRequest) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        kw = {}
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="", **kw)
        # no output wsaction
        response = self.binding.Receive(createCompaniesResponse.typecode)
        return response

    # op: createCompany
    def createCompany(self, request):
        if isinstance(request, createCompanyRequest) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        kw = {}
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="", **kw)
        # no output wsaction
        response = self.binding.Receive(createCompanyResponse.typecode)
        return response

    # get: getCompanyCompaniesByFilter
    def getCompaniesByFilter(self, request):
        if isinstance(request, getCompaniesByFilterRequest) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        kw = {}
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="", **kw)
        # no output wsaction
        response = self.binding.Receive(getCompaniesByFilterResponse.typecode)
        return response

    # get: getCompany
    def getCompany(self, request):
        if isinstance(request, getCompanyRequest) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        kw = {}
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="", **kw)
        # no output wsaction
        response = self.binding.Receive(getCompanyResponse.typecode)
        return response

    # op: updateCompanies
    def updateCompanies(self, request):
        if isinstance(request, updateCompaniesRequest) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        kw = {}
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="", **kw)
        # no output wsaction
        response = self.binding.Receive(updateCompaniesResponse.typecode)
        return response

    # op: updateCompany
    def updateCompany(self, request):
        if isinstance(request, updateCompanyRequest) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        kw = {}
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="", **kw)
        # no output wsaction
        response = self.binding.Receive(updateCompanyResponse.typecode)
        return response

createCompaniesRequest = ns0.createCompanies_Dec().pyclass

createCompaniesResponse = ns0.createCompaniesResponse_Dec().pyclass

createCompanyRequest = ns0.createCompany_Dec().pyclass

createCompanyResponse = ns0.createCompanyResponse_Dec().pyclass

getCompaniesByFilterRequest = ns0.getCompaniesByFilter_Dec().pyclass

getCompaniesByFilterResponse = ns0.getCompaniesByFilterResponse_Dec().pyclass

getCompanyRequest = ns0.getCompany_Dec().pyclass

getCompanyResponse = ns0.getCompanyResponse_Dec().pyclass

updateCompaniesRequest = ns0.updateCompanies_Dec().pyclass

updateCompaniesResponse = ns0.updateCompaniesResponse_Dec().pyclass

updateCompanyRequest = ns0.updateCompany_Dec().pyclass

updateCompanyResponse = ns0.updateCompanyResponse_Dec().pyclass
